#!/usr/bin/env bash

populateMetastore () {
  # make sure that this method stops when an error occured
  BIG_BENCH_STOP_AFTER_FAILURE="1"

  #runCmdWithErrorCheck "$BIG_BENCH_BIN_DIR/bigBench" cleanMetastore $LIST_OF_USER_OPTIONS 
  "$BIG_BENCH_BIN_DIR/bigBench" cleanMetastore $LIST_OF_USER_OPTIONS 
  runCmdWithErrorCheck runEngineCmd -f "$BIG_BENCH_POPULATE_METASTORE_FILE"

  runCmdWithErrorCheck hadoop fs -mkdir -p "$BIG_BENCH_HDFS_ABSOLUTE_TEMP_DIR"
  runCmdWithErrorCheck hadoop fs -mkdir -p "$BIG_BENCH_HDFS_ABSOLUTE_QUERY_RESULT_DIR"
  runCmdWithErrorCheck hadoop fs -chmod ugo+rw "$BIG_BENCH_HDFS_ABSOLUTE_TEMP_DIR"
  runCmdWithErrorCheck hadoop fs -chmod ugo+rw "$BIG_BENCH_HDFS_ABSOLUTE_QUERY_RESULT_DIR"
}

helpModule () {
  echo "This module populates the metastore with the tables for the generated dataset"
  echo
  echo "Options:"
  echo -e "-d\tdatabase to use"
  echo -e "-h\tshow this help"
  echo -e "-v\tsql script for metastore population"
  echo -e "-z\tfile with user defined engine settings"
}

runModule () {
  echo "==============================================="
  echo "Adding/Updating generated files to hive metastore"
  echo "==============================================="

  TIME_MEASUREMENT_FILE="`mktemp`"
  echo "======= Load data into hive time =========" > "$TIME_MEASUREMENT_FILE"
  { time populateMetastore > >(tee -a "$BIG_BENCH_LOADING_STAGE_LOG") 2>&1 ; } 2>> "$TIME_MEASUREMENT_FILE"
  cat "$TIME_MEASUREMENT_FILE" >> "$BIG_BENCH_LOADING_STAGE_LOG"
  rm -rf "$TIME_MEASUREMENT_FILE"
  echo "==========================="

  echo "==============================================="
  echo "HIVE load finished."
  echo "==============================================="
}
